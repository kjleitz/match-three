!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";function r(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r="number"==typeof e[0]?e[0]:0,o="function"==typeof e[0]?e[0]:e[1],u=t<r?[t,r]:[r,t],i=u[0],c=u[1]-i,s=Array(c),f=0;f<c;f++)s[f]=o?o(f+i):f+i;return s}n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return o}));var o=function(t,e){var n=t<e?[t,e]:[e,t],r=n[0],o=n[1]-r;return r+Math.random()*o}},function(t,e,n){"use strict";var r=function(t){if(void 0===t&&(t={}),this.type="",Object.assign(this,t),!this.type)throw new Error("Tiles must have a type.")};e.a=r},function(t,e,n){"use strict";var r=n(1),o=n(0),u=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),o=0;for(e=0;e<n;e++)for(var u=arguments[e],i=0,c=u.length;i<c;i++,o++)r[o]=u[i];return r},i=function(){function t(t){this.rowCount=10,this.colCount=10,this.tileTypes=["a","b","c","d"],this.tileClass=r.a,Object.assign(this,t),this.tileGenerator=t.tileGenerator,this.rows=this.newRows()}return Object.defineProperty(t.prototype,"rows",{get:function(){return this._rows},set:function(t){if(!t.every((function(e){return t[0].length===e.length})))throw new Error("Rows must all be the same length");this._rows=t,delete this._columns,this.rowCount=t.length,this.colCount=t[0].length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"columns",{get:function(){return this._columns?this._columns:(this._columns=this.rows.reduce((function(t,e){return e.forEach((function(e,n){t[n]=u(t[n]||[],[e])})),t}),[]),this._columns)},set:function(t){if(!t.every((function(e){return t[0].length===e.length})))throw new Error("Columns must all be the same length");this.rows=t.reduce((function(t,e){return e.forEach((function(e,n){t[n]=u(t[n]||[],[e])})),t}),[])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tiles",{get:function(){return this.rows.reduce((function(t,e){return u(t,e)}),[])},enumerable:!0,configurable:!0}),t.prototype.newRows=function(){var t=this;return Object(o.b)(this.rowCount,(function(){return Object(o.b)(t.colCount,(function(){return t.tileGenerator()}))}))},t}();e.a=i},function(t,e,n){"use strict";n.r(e);var r=n(2),o=n(0);window.Board=r.a,window.rand=o.a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,